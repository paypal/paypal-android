plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.dicedmelon.gradle.jacoco-android'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion modules.androidMinSdkVersion
        targetSdkVersion modules.androidTargetVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        buildConfigField "String", "CLIENT_SDK_VERSION", "\"$versionName\""
    }

    buildTypes {
        release {
            version = android.defaultConfig.versionName // had to add this to get the version in the build
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    lintOptions {
        lintConfig file('../lint.xml')
        abortOnError true
        warningsAsErrors true
    }
    packagingOptions {
        // Ref: https://stackoverflow.com/a/44767574
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }

    // Ref: https://stackoverflow.com/a/37593189
    testOptions {
        unitTests {
            includeAndroidResources true
            all {
                // workaround for spying on java.net.URL in Http module
                // Ref: https://mockk.io/doc/md/jdk16-access-exceptions.html
                jvmArgs("--add-opens", "java.base/java.io=ALL-UNNAMED")
                jvmArgs("--add-opens", "java.base/java.net=ALL-UNNAMED")
            }
        }
    }

}

dependencies {
    implementation libs.kotlin.std.lib
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.kotlinx.coroutines.android

    testImplementation libs.json.assert
    testImplementation libs.junit
    testImplementation libs.mockk
    testImplementation libs.robolectric
    testImplementation libs.json
    testImplementation libs.kotlinx.android.coroutines.test
    testImplementation libs.androidx.test.core

    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation libs.kotlinx.android.coroutines.test
}

project.ext.name = "core-payments"
project.ext.version = rootProject.version
project.ext.pom_name = "PayPal SDK - CorePayments"
project.ext.pom_desc = "CorePayments library for PayPal payment methods"

apply from: rootProject.file("gradle/gradle-publish.gradle")
