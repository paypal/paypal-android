plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def paypalProperties = loadPropertiesFromFile("paypal.properties")

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.paypal.android"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "CLIENT_ID", paypalProperties["CLIENT_ID"] ?: "\"\"")
        signingConfig signingConfigs.debug
    }

    buildFeatures {
        viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    composeOptions {
        kotlinCompilerExtensionVersion "${versions.compose}"
    }

    lintOptions {
        lintConfig file('../lint.xml')
        abortOnError true
        warningsAsErrors true
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/androidTestShared/java"
        }
    }
}

dependencies {
    debugImplementation project(':Card')
    debugImplementation project(':PayPalDataCollector')
    debugImplementation project(':PayPalNativeCheckout')
    debugImplementation project(':PayPalWebCheckout')
    debugImplementation project(':PayPalUI')
    debugImplementation project(':Venmo')

    releaseImplementation deps.card
    releaseImplementation deps.paypalUI
    releaseImplementation deps.paypalWebCheckout
    releaseImplementation deps.paypalNativeCheckout
    releaseImplementation deps.paypalDataCollector

    implementation deps.kotlinStdLib
    implementation deps.androidxCoreKtx
    implementation deps.androidxAppcompat
    implementation deps.material
    implementation deps.constraintLayout
    implementation deps.androidxLifecycleRuntimeKtx
    implementation deps.fragmentKtx

    implementation deps.composeUi
    implementation deps.composeUiTooling
    implementation deps.composeRuntimeLivedata
    implementation deps.composeFoundation
    implementation deps.composeMaterial
    implementation deps.composeConstraintLayout
    implementation deps.navigationFragment
    implementation deps.navigationUI
    implementation deps.preference

    implementation deps.retrofit
    implementation deps.gson
    implementation deps.loggingInterceptor

    implementation deps.hilt
    kapt deps.hiltKapt
    implementation deps.androidHiltViewModel
    kapt deps.androidHiltKapt

    testImplementation deps.junit

    androidTestImplementation deps.androidxJUnit
    androidTestImplementation deps.androidxEspressoCore
    androidTestImplementation deps.androidxTestRunner
    androidTestImplementation deps.androidxTestRules
    androidTestImplementation deps.androidxTestUiAutomator
}

/**
 * Loads properties at the specified file path. If the file does not exist,
 * this method returns an empty properties object.
 * @param filePath
 */
def loadPropertiesFromFile(filePath) {
    def result = new Properties()
    try {
        result.load(new FileInputStream(rootProject.file(filePath)))
    } catch (e) { /* ignored */ }
    return result
}
